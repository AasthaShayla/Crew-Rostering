{"ast":null,"code":"import axios from 'axios';\nimport io from 'socket.io-client';\n\n// Prefer explicit env, else default to backend dev port 5050\nconst ENV_BASE = process.env.REACT_APP_API_URL;\nconst DEFAULT_BASE = 'http://localhost:5050';\nconst BASE_URL = ENV_BASE || DEFAULT_BASE;\nconst API_BASE_URL = `${BASE_URL}/api`;\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 120000,\n  // 2 minutes for optimization requests\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Socket.IO connection\nlet socket = null;\nexport const connectSocket = () => {\n  if (!socket) {\n    socket = io(BASE_URL, {\n      // Force HTTP long-polling to avoid Werkzeug websocket 500:\n      // \"AssertionError: write() before start_response\"\n      transports: ['polling'],\n      upgrade: false,\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 500,\n      reconnectionDelayMax: 5000,\n      timeout: 10000\n    });\n\n    // Basic diagnostics to reduce transient console noise\n    socket.on('connect_error', err => {\n      console.warn('Socket connect_error:', (err === null || err === void 0 ? void 0 : err.message) || err);\n    });\n    socket.io.on('reconnect_attempt', attempt => {\n      if (attempt % 5 === 0) {\n        console.log('Socket reconnect attempt:', attempt);\n      }\n    });\n    socket.on('disconnect', reason => {\n      console.warn('Socket disconnected:', reason);\n    });\n  }\n  return socket;\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\n\n// Fallback helpers (handle wrong env or port)\nconst directGet = path => axios.get(`http://localhost:5050/api${path}`, {\n  timeout: 120000\n});\nconst directPost = (path, body) => axios.post(`http://localhost:5050/api${path}`, body, {\n  timeout: 120000\n});\n\n// API endpoints with resilient fallbacks\nexport const apiService = {\n  // Health check\n  healthCheck: async () => {\n    try {\n      return await api.get('/health');\n    } catch (e) {\n      return await directGet('/health');\n    }\n  },\n  // Data endpoints\n  getFlights: async () => {\n    try {\n      return await api.get('/data/flights');\n    } catch (e) {\n      console.warn('getFlights() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directGet('/data/flights');\n    }\n  },\n  getCrew: async () => {\n    try {\n      return await api.get('/data/crew');\n    } catch (e) {\n      console.warn('getCrew() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directGet('/data/crew');\n    }\n  },\n  // Optimization endpoints\n  optimize: async (params = {}) => {\n    const defaultParams = {\n      weights: {\n        w_ot: 100,\n        w_fair: 10,\n        w_pref: 1,\n        w_base: 50,\n        w_continuity: 75\n      },\n      max_time: 30 // 30 seconds for quick results with minimal dataset\n    };\n    const body = {\n      ...defaultParams,\n      ...params\n    };\n    try {\n      return await api.post('/optimize', body);\n    } catch (e) {\n      console.warn('optimize() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directPost('/optimize', body);\n    }\n  },\n  reoptimize: async (disruptions = {}) => {\n    const defaultParams = {\n      weights: {\n        w_ot: 100,\n        w_fair: 10,\n        w_pref: 1,\n        w_base: 50,\n        w_continuity: 75\n      },\n      max_time: 30,\n      // 30 seconds for quick what-if scenarios\n      flight_disruptions: [],\n      crew_sickness: [],\n      ...disruptions\n    };\n    try {\n      return await api.post('/reoptimize', defaultParams);\n    } catch (e) {\n      console.warn('reoptimize() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directPost('/reoptimize', defaultParams);\n    }\n  },\n  // Natural-language disruption parsing (LLM-assisted)\n  parseDisruptions: async text => {\n    const body = {\n      text\n    };\n    try {\n      return await api.post('/disruptions/parse', body);\n    } catch (e) {\n      console.warn('parseDisruptions() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directPost('/disruptions/parse', body);\n    }\n  },\n  // Job status\n  getJobStatus: async jobId => {\n    try {\n      return await api.get(`/jobs/${jobId}`);\n    } catch (e) {\n      console.warn('getJobStatus() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directGet(`/jobs/${jobId}`);\n    }\n  },\n  // Roster endpoints\n  getCurrentRoster: async () => {\n    try {\n      return await api.get('/roster/current');\n    } catch (e) {\n      console.warn('getCurrentRoster() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directGet('/roster/current');\n    }\n  },\n  getBaselineRoster: async () => {\n    try {\n      return await api.get('/roster/baseline');\n    } catch (e) {\n      console.warn('getBaselineRoster() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await directGet('/roster/baseline');\n    }\n  },\n  // Weather endpoints\n  weatherSummary: async (start, end) => {\n    try {\n      return await api.get('/weather/summary', {\n        params: {\n          start,\n          end\n        }\n      });\n    } catch (e) {\n      console.warn('weatherSummary() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await axios.get(`${DEFAULT_BASE}/api/weather/summary`, {\n        params: {\n          start,\n          end\n        },\n        timeout: 120000\n      });\n    }\n  },\n  weatherDay: async date => {\n    try {\n      return await api.get('/weather/day', {\n        params: {\n          date\n        }\n      });\n    } catch (e) {\n      console.warn('weatherDay() primary failed, trying fallback to localhost:5050', (e === null || e === void 0 ? void 0 : e.message) || e);\n      return await axios.get(`${DEFAULT_BASE}/api/weather/day`, {\n        params: {\n          date\n        },\n        timeout: 120000\n      });\n    }\n  }\n};\n\n// Error interceptor (keep it for better user messages)\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', error);\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n    return Promise.reject(new Error('Resource not found'));\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n    return Promise.reject(new Error('Server error. Please try again later.'));\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","io","ENV_BASE","process","env","REACT_APP_API_URL","DEFAULT_BASE","BASE_URL","API_BASE_URL","api","create","baseURL","timeout","headers","socket","connectSocket","transports","upgrade","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","on","err","console","warn","message","attempt","log","reason","disconnectSocket","disconnect","directGet","path","get","directPost","body","post","apiService","healthCheck","e","getFlights","getCrew","optimize","params","defaultParams","weights","w_ot","w_fair","w_pref","w_base","w_continuity","max_time","reoptimize","disruptions","flight_disruptions","crew_sickness","parseDisruptions","text","getJobStatus","jobId","getCurrentRoster","getBaselineRoster","weatherSummary","start","end","weatherDay","date","interceptors","response","use","error","_error$response","_error$response2","status","Promise","reject","Error"],"sources":["/Users/aasthashayla/Downloads/Archive/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport io from 'socket.io-client';\n\n// Prefer explicit env, else default to backend dev port 5050\nconst ENV_BASE = process.env.REACT_APP_API_URL;\nconst DEFAULT_BASE = 'http://localhost:5050';\nconst BASE_URL = ENV_BASE || DEFAULT_BASE;\nconst API_BASE_URL = `${BASE_URL}/api`;\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 120000, // 2 minutes for optimization requests\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Socket.IO connection\nlet socket = null;\n\nexport const connectSocket = () => {\n  if (!socket) {\n    socket = io(BASE_URL, {\n      // Force HTTP long-polling to avoid Werkzeug websocket 500:\n      // \"AssertionError: write() before start_response\"\n      transports: ['polling'],\n      upgrade: false,\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 500,\n      reconnectionDelayMax: 5000,\n      timeout: 10000\n    });\n\n    // Basic diagnostics to reduce transient console noise\n    socket.on('connect_error', (err) => {\n      console.warn('Socket connect_error:', err?.message || err);\n    });\n    socket.io.on('reconnect_attempt', (attempt) => {\n      if (attempt % 5 === 0) {\n        console.log('Socket reconnect attempt:', attempt);\n      }\n    });\n    socket.on('disconnect', (reason) => {\n      console.warn('Socket disconnected:', reason);\n    });\n  }\n  return socket;\n};\n\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\n\n// Fallback helpers (handle wrong env or port)\nconst directGet = (path) => axios.get(`http://localhost:5050/api${path}`, { timeout: 120000 });\nconst directPost = (path, body) => axios.post(`http://localhost:5050/api${path}`, body, { timeout: 120000 });\n\n// API endpoints with resilient fallbacks\nexport const apiService = {\n  // Health check\n  healthCheck: async () => {\n    try {\n      return await api.get('/health');\n    } catch (e) {\n      return await directGet('/health');\n    }\n  },\n\n  // Data endpoints\n  getFlights: async () => {\n    try {\n      return await api.get('/data/flights');\n    } catch (e) {\n      console.warn('getFlights() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directGet('/data/flights');\n    }\n  },\n  getCrew: async () => {\n    try {\n      return await api.get('/data/crew');\n    } catch (e) {\n      console.warn('getCrew() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directGet('/data/crew');\n    }\n  },\n\n  // Optimization endpoints\n  optimize: async (params = {}) => {\n    const defaultParams = {\n      weights: { w_ot: 100, w_fair: 10, w_pref: 1, w_base: 50, w_continuity: 75 },\n      max_time: 30 // 30 seconds for quick results with minimal dataset\n    };\n    const body = { ...defaultParams, ...params };\n    try {\n      return await api.post('/optimize', body);\n    } catch (e) {\n      console.warn('optimize() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directPost('/optimize', body);\n    }\n  },\n\n  reoptimize: async (disruptions = {}) => {\n    const defaultParams = {\n      weights: { w_ot: 100, w_fair: 10, w_pref: 1, w_base: 50, w_continuity: 75 },\n      max_time: 30, // 30 seconds for quick what-if scenarios\n      flight_disruptions: [],\n      crew_sickness: [],\n      ...disruptions\n    };\n    try {\n      return await api.post('/reoptimize', defaultParams);\n    } catch (e) {\n      console.warn('reoptimize() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directPost('/reoptimize', defaultParams);\n    }\n  },\n  // Natural-language disruption parsing (LLM-assisted)\n  parseDisruptions: async (text) => {\n    const body = { text };\n    try {\n      return await api.post('/disruptions/parse', body);\n    } catch (e) {\n      console.warn('parseDisruptions() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directPost('/disruptions/parse', body);\n    }\n  },\n\n  // Job status\n  getJobStatus: async (jobId) => {\n    try {\n      return await api.get(`/jobs/${jobId}`);\n    } catch (e) {\n      console.warn('getJobStatus() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directGet(`/jobs/${jobId}`);\n    }\n  },\n\n  // Roster endpoints\n  getCurrentRoster: async () => {\n    try {\n      return await api.get('/roster/current');\n    } catch (e) {\n      console.warn('getCurrentRoster() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directGet('/roster/current');\n    }\n  },\n  getBaselineRoster: async () => {\n    try {\n      return await api.get('/roster/baseline');\n    } catch (e) {\n      console.warn('getBaselineRoster() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await directGet('/roster/baseline');\n    }\n  },\n  // Weather endpoints\n  weatherSummary: async (start, end) => {\n    try {\n      return await api.get('/weather/summary', { params: { start, end } });\n    } catch (e) {\n      console.warn('weatherSummary() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await axios.get(`${DEFAULT_BASE}/api/weather/summary`, { params: { start, end }, timeout: 120000 });\n    }\n  },\n  weatherDay: async (date) => {\n    try {\n      return await api.get('/weather/day', { params: { date } });\n    } catch (e) {\n      console.warn('weatherDay() primary failed, trying fallback to localhost:5050', e?.message || e);\n      return await axios.get(`${DEFAULT_BASE}/api/weather/day`, { params: { date }, timeout: 120000 });\n    }\n  }\n};\n\n// Error interceptor (keep it for better user messages)\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    if (error.response?.status === 404) {\n      return Promise.reject(new Error('Resource not found'));\n    }\n    if (error.response?.status >= 500) {\n      return Promise.reject(new Error('Server error. Please try again later.'));\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC9C,MAAMC,YAAY,GAAG,uBAAuB;AAC5C,MAAMC,QAAQ,GAAGL,QAAQ,IAAII,YAAY;AACzC,MAAME,YAAY,GAAG,GAAGD,QAAQ,MAAM;;AAEtC;AACA,MAAME,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,IAAIC,MAAM,GAAG,IAAI;AAEjB,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAI,CAACD,MAAM,EAAE;IACXA,MAAM,GAAGb,EAAE,CAACM,QAAQ,EAAE;MACpB;MACA;MACAS,UAAU,EAAE,CAAC,SAAS,CAAC;MACvBC,OAAO,EAAE,KAAK;MACdC,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAEC,QAAQ;MAC9BC,iBAAiB,EAAE,GAAG;MACtBC,oBAAoB,EAAE,IAAI;MAC1BV,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACAE,MAAM,CAACS,EAAE,CAAC,eAAe,EAAGC,GAAG,IAAK;MAClCC,OAAO,CAACC,IAAI,CAAC,uBAAuB,EAAE,CAAAF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,OAAO,KAAIH,GAAG,CAAC;IAC5D,CAAC,CAAC;IACFV,MAAM,CAACb,EAAE,CAACsB,EAAE,CAAC,mBAAmB,EAAGK,OAAO,IAAK;MAC7C,IAAIA,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE;QACrBH,OAAO,CAACI,GAAG,CAAC,2BAA2B,EAAED,OAAO,CAAC;MACnD;IACF,CAAC,CAAC;IACFd,MAAM,CAACS,EAAE,CAAC,YAAY,EAAGO,MAAM,IAAK;MAClCL,OAAO,CAACC,IAAI,CAAC,sBAAsB,EAAEI,MAAM,CAAC;IAC9C,CAAC,CAAC;EACJ;EACA,OAAOhB,MAAM;AACf,CAAC;AAED,OAAO,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIjB,MAAM,EAAE;IACVA,MAAM,CAACkB,UAAU,CAAC,CAAC;IACnBlB,MAAM,GAAG,IAAI;EACf;AACF,CAAC;;AAED;AACA,MAAMmB,SAAS,GAAIC,IAAI,IAAKlC,KAAK,CAACmC,GAAG,CAAC,4BAA4BD,IAAI,EAAE,EAAE;EAAEtB,OAAO,EAAE;AAAO,CAAC,CAAC;AAC9F,MAAMwB,UAAU,GAAGA,CAACF,IAAI,EAAEG,IAAI,KAAKrC,KAAK,CAACsC,IAAI,CAAC,4BAA4BJ,IAAI,EAAE,EAAEG,IAAI,EAAE;EAAEzB,OAAO,EAAE;AAAO,CAAC,CAAC;;AAE5G;AACA,OAAO,MAAM2B,UAAU,GAAG;EACxB;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,OAAO,MAAM/B,GAAG,CAAC0B,GAAG,CAAC,SAAS,CAAC;IACjC,CAAC,CAAC,OAAOM,CAAC,EAAE;MACV,OAAO,MAAMR,SAAS,CAAC,SAAS,CAAC;IACnC;EACF,CAAC;EAED;EACAS,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,OAAO,MAAMjC,GAAG,CAAC0B,GAAG,CAAC,eAAe,CAAC;IACvC,CAAC,CAAC,OAAOM,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,gEAAgE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MAC/F,OAAO,MAAMR,SAAS,CAAC,eAAe,CAAC;IACzC;EACF,CAAC;EACDU,OAAO,EAAE,MAAAA,CAAA,KAAY;IACnB,IAAI;MACF,OAAO,MAAMlC,GAAG,CAAC0B,GAAG,CAAC,YAAY,CAAC;IACpC,CAAC,CAAC,OAAOM,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,6DAA6D,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MAC5F,OAAO,MAAMR,SAAS,CAAC,YAAY,CAAC;IACtC;EACF,CAAC;EAED;EACAW,QAAQ,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC/B,MAAMC,aAAa,GAAG;MACpBC,OAAO,EAAE;QAAEC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAC;MAC3EC,QAAQ,EAAE,EAAE,CAAC;IACf,CAAC;IACD,MAAMhB,IAAI,GAAG;MAAE,GAAGS,aAAa;MAAE,GAAGD;IAAO,CAAC;IAC5C,IAAI;MACF,OAAO,MAAMpC,GAAG,CAAC6B,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,8DAA8D,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MAC7F,OAAO,MAAML,UAAU,CAAC,WAAW,EAAEC,IAAI,CAAC;IAC5C;EACF,CAAC;EAEDiB,UAAU,EAAE,MAAAA,CAAOC,WAAW,GAAG,CAAC,CAAC,KAAK;IACtC,MAAMT,aAAa,GAAG;MACpBC,OAAO,EAAE;QAAEC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAC;MAC3EC,QAAQ,EAAE,EAAE;MAAE;MACdG,kBAAkB,EAAE,EAAE;MACtBC,aAAa,EAAE,EAAE;MACjB,GAAGF;IACL,CAAC;IACD,IAAI;MACF,OAAO,MAAM9C,GAAG,CAAC6B,IAAI,CAAC,aAAa,EAAEQ,aAAa,CAAC;IACrD,CAAC,CAAC,OAAOL,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,gEAAgE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MAC/F,OAAO,MAAML,UAAU,CAAC,aAAa,EAAEU,aAAa,CAAC;IACvD;EACF,CAAC;EACD;EACAY,gBAAgB,EAAE,MAAOC,IAAI,IAAK;IAChC,MAAMtB,IAAI,GAAG;MAAEsB;IAAK,CAAC;IACrB,IAAI;MACF,OAAO,MAAMlD,GAAG,CAAC6B,IAAI,CAAC,oBAAoB,EAAED,IAAI,CAAC;IACnD,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,sEAAsE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MACrG,OAAO,MAAML,UAAU,CAAC,oBAAoB,EAAEC,IAAI,CAAC;IACrD;EACF,CAAC;EAED;EACAuB,YAAY,EAAE,MAAOC,KAAK,IAAK;IAC7B,IAAI;MACF,OAAO,MAAMpD,GAAG,CAAC0B,GAAG,CAAC,SAAS0B,KAAK,EAAE,CAAC;IACxC,CAAC,CAAC,OAAOpB,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,kEAAkE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MACjG,OAAO,MAAMR,SAAS,CAAC,SAAS4B,KAAK,EAAE,CAAC;IAC1C;EACF,CAAC;EAED;EACAC,gBAAgB,EAAE,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,OAAO,MAAMrD,GAAG,CAAC0B,GAAG,CAAC,iBAAiB,CAAC;IACzC,CAAC,CAAC,OAAOM,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,sEAAsE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MACrG,OAAO,MAAMR,SAAS,CAAC,iBAAiB,CAAC;IAC3C;EACF,CAAC;EACD8B,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,OAAO,MAAMtD,GAAG,CAAC0B,GAAG,CAAC,kBAAkB,CAAC;IAC1C,CAAC,CAAC,OAAOM,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,uEAAuE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MACtG,OAAO,MAAMR,SAAS,CAAC,kBAAkB,CAAC;IAC5C;EACF,CAAC;EACD;EACA+B,cAAc,EAAE,MAAAA,CAAOC,KAAK,EAAEC,GAAG,KAAK;IACpC,IAAI;MACF,OAAO,MAAMzD,GAAG,CAAC0B,GAAG,CAAC,kBAAkB,EAAE;QAAEU,MAAM,EAAE;UAAEoB,KAAK;UAAEC;QAAI;MAAE,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOzB,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,oEAAoE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MACnG,OAAO,MAAMzC,KAAK,CAACmC,GAAG,CAAC,GAAG7B,YAAY,sBAAsB,EAAE;QAAEuC,MAAM,EAAE;UAAEoB,KAAK;UAAEC;QAAI,CAAC;QAAEtD,OAAO,EAAE;MAAO,CAAC,CAAC;IAC5G;EACF,CAAC;EACDuD,UAAU,EAAE,MAAOC,IAAI,IAAK;IAC1B,IAAI;MACF,OAAO,MAAM3D,GAAG,CAAC0B,GAAG,CAAC,cAAc,EAAE;QAAEU,MAAM,EAAE;UAAEuB;QAAK;MAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAO3B,CAAC,EAAE;MACVhB,OAAO,CAACC,IAAI,CAAC,gEAAgE,EAAE,CAAAe,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEd,OAAO,KAAIc,CAAC,CAAC;MAC/F,OAAO,MAAMzC,KAAK,CAACmC,GAAG,CAAC,GAAG7B,YAAY,kBAAkB,EAAE;QAAEuC,MAAM,EAAE;UAAEuB;QAAK,CAAC;QAAExD,OAAO,EAAE;MAAO,CAAC,CAAC;IAClG;EACF;AACF,CAAC;;AAED;AACAH,GAAG,CAAC4D,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACTjD,OAAO,CAAC+C,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,IAAI,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClC,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC;EACxD;EACA,IAAI,EAAAJ,gBAAA,GAAAF,KAAK,CAACF,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,KAAI,GAAG,EAAE;IACjC,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uCAAuC,CAAC,CAAC;EAC3E;EACA,OAAOF,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe/D,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}