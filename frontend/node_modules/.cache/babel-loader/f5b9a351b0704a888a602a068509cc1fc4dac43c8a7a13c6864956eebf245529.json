{"ast":null,"code":"var _jsxFileName = \"/Users/aasthashayla/Downloads/Archive/frontend/src/components/MinimalDisruptionLab.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Tabs, Tab } from '@mui/material';\nimport DisruptionSimulator from './DisruptionSimulator';\nimport WhatIfComparison from './WhatIfComparison';\nimport LLMDisruptionChat from './LLMDisruptionChat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MinimalDisruptionLab = ({\n  flights,\n  crew,\n  baselineRoster,\n  currentRoster,\n  whatIfResults,\n  onRunScenario,\n  loading\n}) => {\n  _s();\n  const [tab, setTab] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tab,\n        onChange: (e, v) => setTab(v),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Manual What-If\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"LLM Disruption Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), tab === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [baselineRoster && /*#__PURE__*/_jsxDEV(DisruptionSimulator, {\n        flights: flights,\n        crew: crew,\n        onRunScenario: onRunScenario,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), whatIfResults && /*#__PURE__*/_jsxDEV(WhatIfComparison, {\n        beforeRoster: baselineRoster,\n        afterRoster: currentRoster,\n        changes: whatIfResults.changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), tab === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LLMDisruptionChat, {\n        flights: flights,\n        crew: crew,\n        onParsed: () => {/* no manual list in minimal view */},\n        onRunScenario: onRunScenario,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), whatIfResults && /*#__PURE__*/_jsxDEV(WhatIfComparison, {\n        beforeRoster: baselineRoster,\n        afterRoster: currentRoster,\n        changes: whatIfResults.changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(MinimalDisruptionLab, \"axDiLEfgNOglNP+1xq9HAaUfJ9o=\");\n_c = MinimalDisruptionLab;\nexport default MinimalDisruptionLab;\nvar _c;\n$RefreshReg$(_c, \"MinimalDisruptionLab\");","map":{"version":3,"names":["React","useState","Box","Tabs","Tab","DisruptionSimulator","WhatIfComparison","LLMDisruptionChat","jsxDEV","_jsxDEV","Fragment","_Fragment","MinimalDisruptionLab","flights","crew","baselineRoster","currentRoster","whatIfResults","onRunScenario","loading","_s","tab","setTab","sx","display","flexDirection","gap","children","value","onChange","e","v","label","fileName","_jsxFileName","lineNumber","columnNumber","beforeRoster","afterRoster","changes","onParsed","_c","$RefreshReg$"],"sources":["/Users/aasthashayla/Downloads/Archive/frontend/src/components/MinimalDisruptionLab.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Tabs, Tab } from '@mui/material';\nimport DisruptionSimulator from './DisruptionSimulator';\nimport WhatIfComparison from './WhatIfComparison';\nimport LLMDisruptionChat from './LLMDisruptionChat';\n\nconst MinimalDisruptionLab = ({ flights, crew, baselineRoster, currentRoster, whatIfResults, onRunScenario, loading }) => {\n  const [tab, setTab] = useState(0);\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n      <Box>\n        <Tabs value={tab} onChange={(e, v) => setTab(v)}>\n          <Tab label=\"Manual What-If\" />\n          <Tab label=\"LLM Disruption Chat\" />\n        </Tabs>\n      </Box>\n\n      {tab === 0 && (\n        <>\n          {baselineRoster && (\n            <DisruptionSimulator\n              flights={flights}\n              crew={crew}\n              onRunScenario={onRunScenario}\n              loading={loading}\n            />\n          )}\n\n          {whatIfResults && (\n            <WhatIfComparison\n              beforeRoster={baselineRoster}\n              afterRoster={currentRoster}\n              changes={whatIfResults.changes}\n            />\n          )}\n        </>\n      )}\n\n      {tab === 1 && (\n        <>\n          <LLMDisruptionChat\n            flights={flights}\n            crew={crew}\n            onParsed={() => { /* no manual list in minimal view */ }}\n            onRunScenario={onRunScenario}\n            loading={loading}\n          />\n          {whatIfResults && (\n            <WhatIfComparison\n              beforeRoster={baselineRoster}\n              afterRoster={currentRoster}\n              changes={whatIfResults.changes}\n            />\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default MinimalDisruptionLab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}